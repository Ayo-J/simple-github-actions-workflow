name: GitHub Actions Demo Pipeline

on:
  pull_request:
    branches: [ main ]
  workflow_dispatch: 

jobs:
  unit-test:
    runs-on: ubuntu-latest

    steps:
    - name: Repo Checkout
      uses: actions/checkout@v4
      with:
        ref: 'main'
    - name: Python Setup
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r src/requirements.txt
    - name: Run Tests
      run: |
        python -m unittest discover -s unit-tests -p "tests.py"

  repo-tag:
    runs-on: ubuntu-latest
    needs: unit-test

    steps:
    - name: Repo Checkout
      uses: actions/checkout@v4
      with:
        ref: 'main'
        fetch-depth: 0
    - name: Export Version
      run: |
        VERSION=$(cat version.txt)
        echo "version=$VERSION" >> $GITHUB_ENV
    - name: Tag Repo
      run: |
        git config --global user.name "github-actions"
        git config --global user.email "actions@github.com"
        git tag -a "v${{ env.version }}" -m "Version ${{ env.version }}"
        git push origin "v${{ env.version }}"
            
  docker-build-and-push:
    runs-on: ubuntu-latest
    needs: repo-tag

    steps:
    - name: Repo Checkout
      uses: actions/checkout@v4
      with:
        ref: "v${{ env.version }}"
    - name: Docker Buildx Setup
      uses: docker/setup-buildx-action@v3
    - name: GHCR Setup
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Docker Build
      run: |
        docker build -t ghcr.io/${{ github.repository }}/gh-actions-demo:${{ env.version }} .
    - name: Docker Push
      run: |
        docker push ghcr.io/${{ github.repository }}/gh-actions-demo:${{ env.version }}
    
  version-bump:
    runs-on: ubuntu-latest
    needs: docker-build-and-push

    steps:
    - name: Repo Checkout
      uses: actions/checkout@v4
      with:
        ref: 'main'
    - name: Patch Version Bump
      id: patch-version-bump
      run: |
        VERSION=$(cat version.txt)

        IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"
        PATCH=$((PATCH + 1))
        NEW_VERSION="$MAJOR.$MINOR.$PATCH"

        echo $NEW_VERSION > version.txt
    - name: Commit and Push
      run: |
        git config --global user.name "github-actions"
        git config --global user.email "actions@github.com"
        git add version.txt
        git commit -m "Bump version to ${{ steps.patch-version-bump.outputs.NEW_VERSION }}"
        git push origin main